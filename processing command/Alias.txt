别名：
    alias：
        查看别名：alias
        设置别名：alias vi=’vim’
        移除别名：unalias 别名
        别名永久生效：vi  /root/.bashrc


输入输出重定向：
    标准输入输出：
        设备	 设备文件名	 文件描述符	    类型
        键盘	 /dev/stdin  	0	     标准输入
        显示器 	 /dev/sdout  	1	     标准输出
        显示器	 /dev/sdterr 	2	     标准错误输出
    
    输出重定向：
        重定向：把输出结果从原来的默认输出到shell窗口转变成输出到文件中。
        	        
        类型：  标准输出重定向	
        格式：  命令 > 文件(覆盖)
                命令 >> 文件 (追加)
     
        
        类型：  标准错误输出重定向	
        格式：  错误命令 2> 文件 (覆盖) 
                错误命令 2>>文件	(追加)
            
            
        类型：正确输出和错误输出同时保存	
        格式：  命令 > 文件 2>&1 （覆盖）
                命令 >> 文件 2>&1	追加
                命令 &> 文件	(覆盖)
                命令 &>> 文件	(追加)
                命令 >> 文件1 2>> 文件2	(正确输出追加到文件1、错误输出追加到文件2)
        特殊：ls &> /dev/null    不会出现任何输出也不会保存错误信息

        nohup java -jar 自己的springboot项目.jar >日志文件名.log 2>&1 &


多命令顺序执行和管道符:
    多命令顺序执行:
        多命令执行符	       格式	                    作用
            ;	        命令1  ; 命令2	    多个命令之间顺序执行、命令之间没有任何逻辑联系
            &&	        命令1  && 命令2	    逻辑与命令1 正确执行、命令2才会执行
            ||	        命令1  || 命令2	    逻辑或命令1 执行错误、命令2才会执行

    
    管道符：
        命令1  | 命令2
        作用：命令1的正确输出作为命令2的输入。
        grep:
        格式： grep 选项 “搜索内容” 文件名
                    -i   忽略大小写
                    -n   输出行号
                    -v   反向查找
                    --color=auto 搜索出的关键字用颜色显示


ps:
    -A：查看所有的进程
    -ef  :详细查看进程
    -aux :详细查看进程



匹配符号:
    *：任意个的任意字符
    ?: 一个任意的字符
    [abc]: abc三个字符中的任意一个


bash中的特殊符号:
    符号	    作用
    ‘’  	单引号，所有特殊符号没有特殊意思
    “”	    双引号，所有特殊符号有特殊意思
    $()	    引用系统命令、bash会优先执行它
    #	    shell中、#开头表示注释
    $	    调用变量
    \	    转义符



变量:
    设置规则:
        1.变量名称可以由字母、数字和下划线组成,但是不能以数字开头，如果变量名是““2name”则是错误的。
        2.在Bash中，变量的默认类型都是字符串型,如果要进行数值运算，则必修指定变量类型为数值型。
        3.变量用等号连接值，等号左右两侧不能有空格。变量的值如果有空格，需要使用单引号或双引号包括。
        4.在变量的值中，可以使用“\” 转义符。
        5.如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含“$变量名”或用${变量名}包含。
    
    分类:
        用户自定义变量
            定义: name=”direnjie”
            变量的声明周期：如果是在shell窗口上定义的变量、只在当前shell上生效；如果是在shell脚本中定义的变量、只在脚本内部生效。
            调用：echo $name
            查看：set
            变量删除：unset 变量名
        
        环境变量:
            含义：这种变量中主要保存的是和系统操作环境相关的数据。
            用户自定义变量只在当前的Shell中生效，而环境变量会在当前Shell和这个Shell的所有子Shell当中生效。
                (如果把环境变量写入相应的配置文件，那么这个环境变量就会在所有的Shell中生效)
           
                1./etc/profile
                    a)在最后一行加入
                        i.export  PATH=”$PATH”:/root
                2.配置文件更新之后必须重新读取这个配置文件
                    source /etc/profile
                    ./etc/profile
                3.PATH: PATH变量路径下所有的可执行文件都是可以直接输入文件名执行、而不需要输入绝对路径。
                4..whereis
                作用：查看一个命令的存放路径
                格式：whersis 命令
            
            申明变量：export 变量名=变量值
            查询变量：env
            删除变量：unset 变量名
            PATH：系统命令路径  [\u@\h \W]\$
            
            时间相关的命令:
                查看服务器的当前时间:date
                修改当前服务器的时间:
                    date  -s  “yyyy-MM-dd hh:mm:ss”	
                    hwclock -w
        
        位置参数变量:
            这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。
            $0:  文件名
            $1:第一个参数的值,后面的参数值以此类推。
            注意：如果想表示第10或之后的变量需要这么表示： ${10}


        预定义变量:
            是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。
                $?:
                $*:
                $@
                $#:



