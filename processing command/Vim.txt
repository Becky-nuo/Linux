Vim 编辑器的使用:
    功能：
        1、所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在；
        2、很多个别软件的编辑接口都会主动呼叫 vi (例如crontab, visudo, edquota 等指令)；
        3、vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计；
        4、因为程序简单，编辑速度相当快速。
        5、vim 视作 vi 的进阶版本，vim 可以用颜色或底线等方式来显示一些特殊的信息。

    模式：
        一般模式:以 vi 打开一个档案就直接进入一般模式了(这是默认的模式)。可以使用上下左右按键来移动光标，
            你可以使用删除字符或删除整行来处理档案内容，也可以使用复制、贴上来处理你的文件数据。

        编辑模式：在一般模式中可以进行删除、复制、贴上等等的动作，但是却无法编辑文件内容的,
            要等到你按下i, I, o, O, a, A, r, R等任何一个字母之后才会进入编辑模式。
            按下Esc这个按键即可退出编辑模式。

        指令列命令模式:在一般模式当中，输入 :/? 三个中的任何一个按钮，就可以将光标移动到最底下那一行。
            在这个模式当中， 可以提供你『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 vi 、显示行号等动作。


    常用命令：
        一般模式可用的按钮说明，光标移动、复制贴上、搜寻取代等:
            h 或 向左箭头键(←)	光标向左移动一个字符
            j 或 向下箭头键(↓)	光标向下移动一个字符
            k 或 向上箭头键(↑)	光标向上移动一个字符
            l 或 向右箭头键(→)	光标向右移动一个字符
            
            (如果想要进行多次移动的话，例如向下移动 30 行，可以使用 "30j" 或 "30↓" 
                的组合按键亦即加上想要进行的次数(数字)后，按下动作即可！)

            [Ctrl] + [f]	屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)
            [Ctrl] + [b]	屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)
            [Ctrl] + [d]	屏幕『向下』移动半页
            [Ctrl] + [u]	屏幕『向上』移动半页
            +	光标移动到非空格符的下一列
            -	光标移动到非空格符的上一列


        一般模式切换到编辑模式的可用的按钮说明:
            i, I	进入插入模式(Insert mode)：
                i 为『从目前光标所在处插入』， 
                I 为『在目前所在行的第一个非空格符处开始插入』。 (常用)
            
            a, A	进入插入模式(Insert mode)：
                a 为『从目前光标所在的下一个字符处开始插入』， 
                A 为『从光标所在行的最后一个字符处开始插入』。(常用)

            o, O	进入插入模式(Insert mode)：
                这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处插入新的一行』；
                 O 为在目前光标所在处的上一行插入新的一行！(常用)

            r, R	进入取代模式(Replace mode)：
                r 只会取代光标所在的那一个字符一次；
                R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)

        
        一般模式切换到指令列模式的可用的按钮说明:
            :w	将编辑的数据写入硬盘档案中(常用)
            :w!	若文件属性为『只读』时，强制写入该档案。
            :q	离开 vi (常用)  ----> 惊叹号 (!) 在 vi 当中，常常具有『强制』的意思。
            :q!	若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。
            :wq	储存后离开，若为 :wq! 则为强制储存后离开 (常用)

            ZZ	这是大写的 Z ，若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！
            :w [filename]	将编辑的数据储存成另一个档案（类似另存新档）。
            :r [filename]	在编辑的数据中，读入另一个档案的数据。亦即将『filename』这个档案内容加到游标所在行后面
            :n1,n2 w [filename]	将 n1 到 n2 的内容储存成 filename 这个档案。
            :! command	暂时离开 vi 到指令列模式下执行 command 的显示结果！
                例如『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！
        
        vim 环境的变更：
            :set nu	显示行号，设定之后，会在每一行的前缀显示该行的行号。
            :set nonu	与 set nu 相反，为取消行号！


        
    额外功能：
        区块选择的按键意义：
            v	字符选择，会将光标经过的地方反白选择！
            V	行选择，会将光标经过的行反白选择！
            [Ctrl]+v	区块选择,可以用长方形的方式选择资料。
            y	将反白的地方复制起来。
            d	将反白的地方删除掉。


        多文档编辑：
            :n	    编辑下一个档案
            :N	    编辑上一个档案
            :files	列出目前这个 vim 的开启的所有档案